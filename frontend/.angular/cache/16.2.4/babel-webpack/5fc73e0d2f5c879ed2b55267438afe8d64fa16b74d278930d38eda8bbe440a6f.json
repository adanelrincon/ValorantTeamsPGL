{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/team.service\";\nimport * as i4 from \"@ionic/angular\";\nclass TeamUpdatePage {\n  constructor(formBuilder, route, router, teamService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.teamService = teamService;\n  }\n  ngOnInit() {\n    this.initForm();\n    this.route.params.subscribe(params => {\n      const teamId = params['id'];\n      if (teamId) {\n        // Aquí deberías cargar los datos del equipo con el ID proporcionado\n        // y llenar el formulario con esos datos.\n        this.loadTeamData(teamId);\n      }\n    });\n  }\n  initForm() {\n    this.teamUpdateForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      region: ['', Validators.required],\n      position: [null, Validators.required]\n    });\n  }\n  loadTeamData(teamId) {\n    // Aquí deberías cargar los datos del equipo con el ID proporcionado\n    // y llenar el formulario con esos datos.\n    // Puedes usar tu servicio para hacer esto.\n    const team = this.teamService.getOneTeam(teamId);\n    this.teamUpdateForm.patchValue(team); // Llena el formulario con los datos del equipo\n  }\n\n  updateTeam(teamId, updatedTeamData) {\n    // Asegúrate de que el servicio tenga un método que acepte el ID del equipo y los datos actualizados\n    this.teamService.updateTeam(teamId, updatedTeamData).subscribe(response => {\n      // Maneja la respuesta de actualización, por ejemplo, muestra un mensaje de éxito.\n      console.log('Equipo actualizado con éxito:', response);\n      // Redirige de nuevo a la página del equipo o a donde quieras después de la actualización.\n      this.router.navigate(['/team']);\n    }, error => {\n      // Maneja el error de actualización, por ejemplo, muestra un mensaje de error.\n      console.error('Error al actualizar el equipo:', error);\n    });\n  }\n}\n_class = TeamUpdatePage;\n_class.ɵfac = function TeamUpdatePage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.TeamService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-team-update\"]],\n  decls: 22,\n  vars: 3,\n  consts: [[3, \"translucent\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"lines\", \"full\"], [\"position\", \"floating\"], [\"formControlName\", \"name\", \"type\", \"text\", \"required\", \"\"], [\"formControlName\", \"region\", \"type\", \"text\", \"required\", \"\"], [\"formControlName\", \"position\", \"type\", \"number\", \"required\", \"\"], [\"type\", \"submit\", \"color\", \"primary\", \"shape\", \"full\", \"expand\", \"block\", 3, \"disabled\"]],\n  template: function TeamUpdatePage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"team-update\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\")(5, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function TeamUpdatePage_Template_form_ngSubmit_5_listener() {\n        return ctx.updateTeam();\n      });\n      i0.ɵɵelementStart(6, \"ion-item\", 2)(7, \"ion-label\", 3);\n      i0.ɵɵtext(8, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"ion-input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"ion-item\", 2)(11, \"ion-label\", 3);\n      i0.ɵɵtext(12, \"Region\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"ion-input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"ion-item\")(15, \"ion-label\", 3);\n      i0.ɵɵtext(16, \"Position\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"ion-input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"ion-row\")(19, \"ion-col\")(20, \"ion-button\", 7);\n      i0.ɵɵtext(21, \" Update Team \");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.teamUpdateForm);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"disabled\", !ctx.teamUpdateForm.valid || ctx.updating);\n    }\n  },\n  dependencies: [i4.IonButton, i4.IonCol, i4.IonContent, i4.IonHeader, i4.IonInput, i4.IonItem, i4.IonLabel, i4.IonRow, i4.IonTitle, i4.IonToolbar, i4.NumericValueAccessor, i4.TextValueAccessor, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { TeamUpdatePage };","map":{"version":3,"names":["Validators","TeamUpdatePage","constructor","formBuilder","route","router","teamService","ngOnInit","initForm","params","subscribe","teamId","loadTeamData","teamUpdateForm","group","name","required","region","position","team","getOneTeam","patchValue","updateTeam","updatedTeamData","response","console","log","navigate","error","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","Router","i3","TeamService","selectors","decls","vars","consts","template","TeamUpdatePage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TeamUpdatePage_Template_form_ngSubmit_5_listener","ɵɵelement","ɵɵproperty","ɵɵadvance","valid","updating"],"sources":["/Users/adanph15/Documents/PGL/ProyectoOctubre/frontend/ValorantTeams/src/app/team-update/team-update.page.ts","/Users/adanph15/Documents/PGL/ProyectoOctubre/frontend/ValorantTeams/src/app/team-update/team-update.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TeamService } from '../services/team.service';\n\n\n@Component({\n  selector: 'app-team-update',\n  templateUrl: './team-update.page.html',\n  styleUrls: ['./team-update.page.scss'],\n})\nexport class TeamUpdatePage implements OnInit {\n  teamUpdateForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private teamService: TeamService \n  ) {}\n\n  ngOnInit() {\n    this.initForm();\n    this.route.params.subscribe((params) => {\n      const teamId = params['id'];\n      if (teamId) {\n        // Aquí deberías cargar los datos del equipo con el ID proporcionado\n        // y llenar el formulario con esos datos.\n        this.loadTeamData(teamId);\n      }\n    });\n  }\n\n  initForm() {\n    this.teamUpdateForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      region: ['', Validators.required],\n      position: [null, Validators.required],\n    });\n  }\n\n  loadTeamData(teamId: number) {\n    // Aquí deberías cargar los datos del equipo con el ID proporcionado\n    // y llenar el formulario con esos datos.\n    // Puedes usar tu servicio para hacer esto.\n    const team = this.teamService.getOneTeam(teamId);\n    this.teamUpdateForm.patchValue(team); // Llena el formulario con los datos del equipo\n  }\n\n  updateTeam(teamId: number, updatedTeamData: any) {\n    // Asegúrate de que el servicio tenga un método que acepte el ID del equipo y los datos actualizados\n    this.teamService.updateTeam(teamId, updatedTeamData).subscribe(\n      (response) => {\n        // Maneja la respuesta de actualización, por ejemplo, muestra un mensaje de éxito.\n        console.log('Equipo actualizado con éxito:', response);\n  \n        // Redirige de nuevo a la página del equipo o a donde quieras después de la actualización.\n        this.router.navigate(['/team']);\n      },\n      (error) => {\n        // Maneja el error de actualización, por ejemplo, muestra un mensaje de error.\n        console.error('Error al actualizar el equipo:', error);\n      }\n    );\n  }\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>team-update</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"teamUpdateForm\" (ngSubmit)=\"updateTeam()\" novalidate>\n    <ion-item lines=\"full\">\n      <ion-label position=\"floating\">Name</ion-label>\n      <ion-input formControlName=\"name\" type=\"text\" required></ion-input>\n    </ion-item>\n\n    <ion-item lines=\"full\">\n      <ion-label position=\"floating\">Region</ion-label>\n      <ion-input formControlName=\"region\" type=\"text\" required>\n      </ion-input>\n    </ion-item>\n\n    <ion-item>\n      <ion-label position=\"floating\">Position</ion-label>\n      <ion-input formControlName=\"position\" type=\"number\" required>\n      </ion-input>\n    </ion-item>\n\n    <ion-row>\n      <ion-col>\n        <!-- Deshabilita el botón si el formulario no es válido o se está procesando la actualización -->\n        <ion-button type=\"submit\" color=\"primary\" shape=\"full\" expand=\"block\" [disabled]=\"!teamUpdateForm.valid || updating\">\n          Update Team\n        </ion-button>\n      </ion-col>\n    </ion-row>\n  </form>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}